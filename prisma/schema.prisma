// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  // data
  id            String  @id
  name          String
  email         String
  emailVerified Boolean
  image         String?

  // relationships
  sessions Session[]
  accounts Account[]

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email])
}

model Session {
  // data
  id        String   @id
  token     String   @unique
  ipAddress String?
  userAgent String?
  expiresAt DateTime

  // relationships
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // indexes
  @@index([userId])
}

model Account {
  // data
  id                    String    @id
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  // relationships
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // indexes
  @@index([userId])
}

model Verification {
  // data
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}